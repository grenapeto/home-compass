import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

export interface SubItem {
  _id?: string;  // Optional since it's auto-generated by MongoDB
  expirationDate: Date;
  amount: number;
  unit?: string;  // Optional based on your schema
}

export interface InventoryItem {
  _id?: string;  // Optional since it's auto-generated by MongoDB
  name: string;
  items: SubItem[];
  category: string;
}

@Injectable({
  providedIn: 'root'
})
export class InventoryService {
  private baseUrl = 'http://localhost:3000/api/v1/inventory'; // Adjust as needed

  constructor(private http: HttpClient) {}

  getAllInventoryItems(): Observable<InventoryItem[]> {
    return this.http.get<InventoryItem[]>(this.baseUrl);
  }

  createInventoryItem(item: InventoryItem): Observable<InventoryItem> {
    return this.http.post<InventoryItem>(this.baseUrl, item);
  }

  getInventoryItem(id: string): Observable<InventoryItem> {
    return this.http.get<InventoryItem>(`${this.baseUrl}/${id}`);
  }

  updateInventoryItem(id: string, item: InventoryItem): Observable<InventoryItem> {
    return this.http.put<InventoryItem>(`${this.baseUrl}/${id}`, item);
  }

  deleteInventoryItem(id: string): Observable<any> {
    return this.http.delete<any>(`${this.baseUrl}/${id}`);
  }

  editInventoryItemById(inventoryId: string, itemId: string, subItem: SubItem): Observable<InventoryItem> {
    return this.http.put<InventoryItem>(`${this.baseUrl}/${inventoryId}/items/${itemId}`, subItem);
  }

  deleteInventoryItemById(inventoryId: string, itemId: string): Observable<any> {
    return this.http.delete<any>(`${this.baseUrl}/${inventoryId}/items/${itemId}`);
  }
}
